{"version":3,"sources":["App.module.sass","store/reducers/course.js","store/reducers/index.js","store/actionTypes.js","store/index.js","components/header.js","components/footer.js","components/title.js","pages/home.js","store/course/index.js","store/course/CS301A.js","store/course/CS301B.js","components/avaList.js","components/courseBlock.js","pages/course.js","store/actions.js","App.js","serviceWorker.js","index.js","pages/home.module.scss","pages/course.module.scss","components/header.module.sass"],"names":["module","exports","initialState","content","combineReducers","course","state","action","type","payload","createStore","rootReducer","SubMenu","Menu","Item","Header","_menuList","title","href","subList","_renderMenu","arrList","map","item","index","key","to","_renderNav","length","slot","className","headerStyle","header","logo","src","alt","mode","nav","selectable","subMenuCloseDelay","this","React","Component","Footer","gutter","span","Title","props","text","Meta","Card","Home","_blockList","courseList","img","des","_renderBlock","homeStyle","blockWrap","_renderCard","_render","arrayList","offset","style","marginTop","hoverable","cover","description","_renderCode","fixWrap","fixBody","_renderTitleBlock","titleBlock","backgroundImage","process","titleWrap","home","CS301A","base","background","subTitle","price","introduction","suit","studentList","courseInfo","detail","contentList","courseScreen","imgList","CS301B","AvaList","grid","dataSource","data","renderItem","size","Panel","Collapse","Course","show","onChange","val","setState","showArrow","connect","courseStyle","_renderTextContent","courseTextContent","courseBlock","_renderIntrodution","_renderSuit","stuList","column","_renderCourse","_renderPrice","priceBlock","_renderCourseScreen","interval","height","getContent","courseName","dispatch","id","match","params","console","log","nextProps","location","pathname","intro","Layout","Content","App","store","AppStyles","headerLayout","contentLayout","path","exact","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,aAAe,0BAA0B,cAAgB,6B,oUCCrEC,EAAe,CACnBC,QAAS,ICAIC,cAAgB,CAAEC,ODGlB,WAAwC,IAA/BC,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCACpD,OAAQA,EAAOC,MACb,IERyB,gBFQJ,IACXL,EAAYI,EAAOE,QAAnBN,QACR,OAAO,eACFG,EADL,CAEEH,YAGJ,QACE,OAAOG,MGbEI,cAAYC,G,kCCInBC,EAAkBC,IAAlBD,QAASE,EAASD,IAATC,KA2HFC,E,2MAxHbC,UAAY,CAAC,CACXC,MAAO,eACPC,KAAM,IACNC,QAAS,IACR,CACDF,MAAO,2BACPC,KAAM,GACNC,QAAS,CACP,CACEF,MAAO,oEACPC,KAAM,iBACNC,QAAS,IACR,CACDF,MAAO,0EACPC,KAAM,iBACNC,QAAS,IACR,CACDF,MAAO,sEACPC,KAAM,iBACNC,QAAS,IACR,CACDF,MAAO,iEACPC,KAAM,iBACNC,QAAS,MAGZ,CACDF,MAAO,2BACPC,KAAM,GACNC,QAAS,CACP,CACEF,MAAO,2EACPC,KAAM,gBACNC,QAAS,IACR,CACDF,MAAO,sEACPC,KAAM,gBACNC,QAAS,IACR,CACDF,MAAO,oCACPC,KAAM,gBACNC,QAAS,IACR,CACDF,MAAO,uCACPC,KAAM,gBACNC,QAAS,MAGZ,CACDF,MAAO,2BACPC,KAAM,GACNC,QAAS,CACP,CACEF,MAAO,mDACPC,KAAM,gBACNC,QAAS,MAGZ,CACDF,MAAO,qBACPC,KAAM,GACNC,QAAS,CACP,CACEF,MAAO,oDACPC,KAAM,gBACNC,QAAS,O,EAKfC,YAAc,SAAAC,GAAO,OACnBA,EAAQC,KAAI,SAACC,EAAMC,GAAP,OACV,kBAACV,EAAD,CAAMW,IAAKD,GACT,kBAAC,IAAD,CAAME,GAAIH,EAAKL,MAAOK,EAAKN,Y,EAGjCU,WAAa,kBACX,EAAKX,UAAUM,KAAI,SAACC,EAAMC,GACxB,OAA4B,IAAxBD,EAAKJ,QAAQS,OAEb,kBAACd,EAAD,CAAMW,IAAKD,GACT,kBAAC,IAAD,CAAME,GAAIH,EAAKL,MAAQK,EAAKN,QAK9B,kBAACL,EAAD,CACEa,IAAKD,EACLP,MACE,0BAAMY,KAAK,QAAQC,UAAU,yBACzBP,EAAKN,MACP,kBAAC,IAAD,CAAMT,KAAK,WAIb,EAAKY,YAAYG,EAAKJ,c,wEAQhC,OACE,yBAAKW,UAAWC,IAAYC,QAC1B,kBAAC,IAAD,CAAMN,GAAG,KACP,yBACEI,UAAWC,IAAYE,KACvBC,IAAI,aACJC,IAAI,UAGR,kBAAC,IAAD,CAAMC,KAAK,aAAaN,UAAWC,IAAYM,IAAKC,YAAY,EAAOC,kBAAmB,KACtFC,KAAKb,mB,GAlHIc,IAAMC,W,gBC6BZC,G,wLA9BX,OACE,yBAAKb,UAAU,UACb,kBAAC,IAAD,CAAKtB,KAAK,OAAOoC,OAAQ,IACvB,kBAAC,IAAD,CAAKC,KAAM,GACT,yBAAKV,IAAI,OAAOD,IAAI,gBAEtB,kBAAC,IAAD,CAAKW,KAAM,GACT,uBAAGf,UAAU,UAAb,WACA,2BACE,uBAAGZ,KAAK,4DAAR,0BAGJ,kBAAC,IAAD,CAAK2B,KAAM,GACT,uBAAGf,UAAU,UAAb,wCACA,2BACE,yBAAKK,IAAI,SAASD,IAAI,sBAG1B,kBAAC,IAAD,CAAKW,KAAM,GACT,uBAAGf,UAAU,UAAb,wCACA,2BACE,yBAAKK,IAAI,SAASD,IAAI,iC,GAvBfO,IAAMC,YCQZI,G,wLATX,OACE,yBAAKhB,UAAU,cACb,4BAAMU,KAAKO,MAAMC,MACjB,yBAAKlB,UAAU,c,GALHW,IAAMC,Y,0BCKlBO,EAASC,IAATD,KAiJOE,E,2MA9IbC,WAAa,CAAC,CACZnC,MAAO,2BACPoC,WAAY,CAAC,CACXC,IAAK,oBACLpC,KAAM,iBACND,MAAO,oEACPsC,IAAK,soBACJ,CACDD,IAAK,oBACLpC,KAAM,iBACND,MAAO,0EACPsC,IAAK,wiBACJ,CACDD,IAAK,oBACLpC,KAAM,iBACND,MAAO,sEACPsC,IAAK,8rBACJ,CACDD,IAAK,oBACLpC,KAAM,iBACND,MAAO,iEACPsC,IAAK,ikBAEN,CACDtC,MAAO,2BACPoC,WAAY,CAAC,CACXC,IAAK,mBACLpC,KAAM,gBACND,MAAO,2EACPsC,IAAK,ySACJ,CACDD,IAAK,mBACLpC,KAAM,gBACND,MAAO,sEACPsC,IAAK,wVACJ,CACDD,IAAK,mBACLpC,KAAM,gBACND,MAAO,oCACPsC,IAAK,odACJ,CACDD,IAAK,mBACLpC,KAAM,gBACND,MAAO,uCACPsC,IAAK,mOAEN,CACDtC,MAAO,2BACPoC,WAAY,CAAC,CACXC,IAAK,mBACLpC,KAAM,gBACND,MAAO,mDACPsC,IAAK,gDAEN,CACDtC,MAAO,qBACPoC,WAAY,CAAC,CACXC,IAAK,mBACLpC,KAAM,gBACND,MAAO,oDACPsC,IAAK,kD,EAITC,aAAe,kBACb,EAAKJ,WAAW9B,KAAI,SAACC,EAAMC,GAAP,OAClB,yBAAKM,UAAW2B,IAAUC,UAAWjC,IAAKD,GACxC,kBAAC,EAAD,CAAOwB,KAAMzB,EAAKN,QAChB,EAAK0C,YAAYpC,EAAK8B,iB,EAI9BO,a,IAEAD,YAAc,SAAAE,GACZ,IAEMC,EAA8B,IAArBD,EAAUjC,OAAe,EAAI,EAE5C,OACE,kBAAC,IAAD,CAAKgB,OALQ,IAOTiB,EAAUvC,KAAI,SAACC,EAAMC,GAAP,OACZ,kBAAC,IAAD,CAAME,GAAIH,EAAKL,KAAOO,IAAKD,GACzB,kBAAC,IAAD,CAAKqB,KAAM,EAAGiB,OAAQtC,EAAQ,IAAM,EAAIsC,EAAS,EAAGC,MAAO,CAACC,UATvD,KAUH,kBAAC,IAAD,CACEC,WAAS,EACTC,MAAO,yBAAK/B,IAAI,SAASD,IAAKX,EAAK+B,OAEnC,kBAACL,EAAD,CAAMhC,MAAOM,EAAKN,MAAOkD,YAAa5C,EAAKgC,c,EAU3Da,YAAc,kBACZ,yBAAKtC,UAAW2B,IAAUY,SACxB,kBAAC,IAAD,CACEJ,WAAS,EACTC,MACE,6BACE,yBAAKhC,IAAI,sBAAsBC,IAAI,YAIvC,6BACE,6BACE,yBAAKD,IAAI,kBAAkBC,IAAI,UAEjC,yBAAKL,UAAW2B,IAAUa,SAA1B,sF,EAQRC,kBAAoB,kBAClB,yBAAKzC,UAAY2B,IAAUe,WAAaT,MAAQ,CAAEU,gBAAgB,OAAD,OAAUC,IAAV,+BAC/D,yBAAK5C,UAAY2B,IAAUkB,WACzB,4IACA,gIACA,mI,wEAMJ,OACE,yBAAK7C,UAAY2B,IAAUmB,MACvBpC,KAAK+B,oBACL/B,KAAKgB,eACLhB,KAAK4B,mB,GAzII3B,IAAMC,WCPV,GACbmC,OCJa,CACbC,KAAM,CACJC,WAAY,2BACZ9D,MAAO,6DACP+D,SAAU,qoBACVC,MAAO,MACP1B,IAAK,CAAC,uCACJ,iFACA,qDAGJ2B,aAAc,CACZjE,MAAO,2BACPd,QAAS,CACP,yrCACA,wyBACA,ibAGJgF,KAAM,CACJlE,MAAO,2BACPmE,YAAa,CAAC,CACZ9B,IAAK,8BACLrC,MAAO,iEACN,CACDqC,IAAK,8BACLrC,MAAO,kFACN,CACDqC,IAAK,8BACLrC,MAAO,8FACN,CACDqC,IAAK,8BACLrC,MAAO,sEACN,CACDqC,IAAK,8BACLrC,MAAO,0DACN,CACDqC,IAAK,8BACLrC,MAAO,4HACN,CACDqC,IAAK,8BACLrC,MAAO,8HAGXoE,WAAY,CACVpE,MAAO,2BACPoC,WAAY,CAAC,CACXpC,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,qCACPd,QAAS,4IAEXoF,YAAa,CACX,6CAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,eACPd,QAAS,0SAEXoF,YAAa,CACX,iCACA,2BACA,6CACA,mDACA,wIACA,6FAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,eACPd,QAAS,0PAEXoF,YAAa,CACX,iCACA,uCACA,2EACA,6CACA,+DACA,wDACA,2FACA,qDAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,eACPd,QAAS,yNAEXoF,YAAa,CACX,sCACA,kFACA,gDACA,sDACA,wFACA,kFACA,gCACA,sCACA,8FAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,SACPd,QAAS,4KAEXoF,YAAa,CACX,iCACA,uCACA,6FAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,SACPd,QAAS,iPAEXoF,YAAa,CACX,qCACA,oDACA,6DACA,2FACA,sEACA,2FACA,wEACA,2FACA,0EACA,2FACA,iCACA,6FAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,eACPd,QAAS,sTAEXoF,YAAa,CACX,iCACA,6FAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,uCACPd,QAAS,sHAEXoF,YAAa,CACX,yEAYNC,aAAc,CACZvE,MAAO,2BACPwE,QAAS,CACP,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,oBDtKJC,OELa,CACbZ,KAAM,CACJC,WAAY,2BACZ9D,MAAO,mEACP+D,SAAU,SACVC,MAAO,MACP1B,IAAK,CAAC,uCACJ,iFACA,qDAGJ2B,aAAc,CACZjE,MAAO,2BACPd,QAAS,CACP,89BACA,+mBACA,unBACA,60BAGJgF,KAAM,CACJlE,MAAO,2BACPmE,YAAa,CAAC,CACZ9B,IAAK,8BACLrC,MAAO,wCACN,CACDqC,IAAK,8BACLrC,MAAO,0DACN,CACDqC,IAAK,8BACLrC,MAAO,8FACN,CACDqC,IAAK,8BACLrC,MAAO,sKACN,CACDqC,IAAK,8BACLrC,MAAO,mEACN,CACDqC,IAAK,8BACLrC,MAAO,4HACN,CACDqC,IAAK,8BACLrC,MAAO,4GAGXoE,WAAY,CACVpE,MAAO,2BACPoC,WAAY,CAAC,CACXpC,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,2BACPd,QAAS,ybAEXoF,YAAa,CACX,kCACA,6FACA,iIACA,uGACA,2GACA,yGAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,qBACPd,QAAS,kaAEXoF,YAAa,CACX,qEACA,qEACA,6FACA,iCACA,qEACA,6FACA,uEAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,eACPd,QAAS,oPAEXoF,YAAa,CACX,8CACA,6FACA,8CACA,6FACA,8CACA,6FACA,8CACA,6FACA,8CACA,6FACA,8CACA,+FAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,MACPd,QAAS,8RAEXoF,YAAa,CACX,oCACA,6FACA,oCACA,+FAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,MACPd,QAAS,iMAEXoF,YAAa,CACX,8BACA,oCACA,6FACA,oCACA,6FACA,oCACA,6FACA,oCACA,+FAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,eACPd,QAAS,0PAEXoF,YAAa,CACX,2EACA,6CACA,+FAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,uCACPd,QAAS,6OAEXoF,YAAa,CACX,kCACA,wDACA,+FAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,UACPd,QAAS,oPAEXoF,YAAa,CACX,+FAED,CACDtE,MAAO,qBACPqE,OAAQ,CACNrE,MAAO,SACPd,QAAS,sQAEXoF,YAAa,CACX,6CACA,6FACA,6CACA,6FACA,6CACA,6FACA,6CACA,6FACA,6CACA,iGAINC,aAAc,CACZvE,MAAO,2BACPwE,QAAS,CACP,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACA,kBACA,kBACA,sB,kBCzJSE,G,wLA/BX,OACE,kBAAC,IAAD,CACEC,KAAOpD,KAAKO,MAAM6C,KAClBC,WAAYrD,KAAKO,MAAM+C,KACvBC,WAAY,SAAAxE,GAAI,OACd,kBAAC,IAAKT,KAAN,KAQE,yBAAKgB,UAAU,YACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAQI,IAAKX,EAAK+B,IAAK0C,KAAO,MAEhC,2BAAKzE,EAAKN,gB,GAnBFwB,IAAMC,Y,kBCApBuD,G,OAAUC,IAAVD,OAmDOE,E,2MAhDb7F,MAAQ,CACN8F,MAAM,G,EAGRC,SAAW,SAACC,GACV,EAAKC,SAAS,CACZH,KAAqB,IAAfE,EAAI1E,U,wEAIH,IAAD,EAC+BY,KAAKO,MAApC9B,EADA,EACAA,MAAOqE,EADP,EACOA,OAAQC,EADf,EACeA,YAEvB,OACE,yBAAKzD,UAAU,UACb,kBAAC,IAAD,CAAUuE,SAAU7D,KAAK6D,UACvB,kBAACJ,EAAD,CAAOO,WAAW,EAAOxE,OACvB,yBAAKF,UAAU,iBACX,yBAAKA,UAAU,uBACXb,GAEJ,yBAAKa,UAAU,sBACb,wBAAIA,UAAU,uBACVwD,EAAOrE,OAEX,yBAAKa,UAAU,yBACXwD,EAAOnF,SAEX,yBAAK2B,UAAU,oBACb,kBAAC,IAAD,CAAMtB,KAAOgC,KAAKlC,MAAM8F,KAAO,KAAO,aAK9C,kBAAC,IAAD,KACIb,EAAYjE,KAAI,SAACC,EAAMC,GAAP,OAChB,kBAAC,IAASV,KAAV,CAAeW,IAAKD,GAChBD,c,GAtCCkB,IAAMC,W,0BCSnBO,G,OAASC,IAATD,MAuJOkD,EArJdM,aACC,SAAAnG,GAAK,sBAASA,EAAMD,U,eAGpB,WAAa0C,GAAQ,IAAD,8BAClB,+CAIFwB,kBAAoB,SAACQ,EAAY9D,EAAO+D,EAAUC,EAAO1B,GAArC,OAClB,yBAAKzB,UAAY4E,IAAYlC,WAAaT,MAAQ,CAAEU,gBAAgB,OAAD,OAAUC,IAAyBK,EAAnC,OACjE,yBAAKjD,UAAY4E,IAAY/B,WAC7B,kBAAC,IAAD,CAAK/B,OAAQ,KACX,kBAAC,IAAD,CAAKC,KAAM,IACT,4BAAM5B,GACN,4BAAM+D,IAER,kBAAC,IAAD,CAAKnC,KAAM,GACT,4BAAMoC,GAEJ1B,EAAIjC,KAAI,SAACC,EAAMC,GAAP,OACN,uBAAGC,IAAMD,GAAUD,WAjBX,EA2BpBoF,mBAAqB,SAACpB,GAAD,OACnB,yBAAKzD,UAAY4E,IAAYE,mBACzBrB,EAAYjE,KAAI,SAACC,EAAMC,GAAP,OAAiB,uBAAGC,IAAKD,GAASD,QA7BpC,EAgCpBiC,aAAe,SAACvC,EAAOd,GAAR,OACb,yBAAK2B,UAAY4E,IAAYG,aAC3B,kBAAC,EAAD,CAAO7D,KAAO/B,IACZd,IAnCc,EAsCpB2G,mBAAqB,SAAC7F,EAAOd,GAAR,OACnB,6BACI,EAAKqD,aAAavC,EAChB,EAAK0F,mBAAmBxG,MAzCZ,EA6CpB4G,YAAc,SAAC9F,EAAO+F,GAAR,OACZ,6BAEI,EAAKxD,aAAavC,EAChB,kBAAC,EAAD,CAAS6E,KAAOkB,EAAUpB,KAAO,CAAEhD,OAAQ,GAAIqE,OAAQ,QAjD3C,EAsDpBC,cAAgB,SAACjG,EAAOoC,GAAR,OACZ,6BAEI,EAAKG,aAAavC,EAChBoC,EAAW/B,KAAI,SAACC,EAAMC,GAAP,OACb,kBAAC,EAAD,CACAP,MAAQM,EAAKN,MACbqE,OAAS/D,EAAK+D,OACdC,YAAchE,EAAKgE,YACnB9D,IAAMD,UA/DE,EAsEpB2F,aAAe,SAAClG,EAAOgE,EAAO1B,GAAf,OACX,6BAEI,EAAKC,aAAavC,EAChB,kBAAC,IAAD,CAAK2B,OAAQ,IACX,kBAAC,IAAD,CAAKC,KAAM,EAAGiB,OAAQ,IACpB,kBAAC,IAAD,CACEG,WAAS,EACTC,MAAO,yBAAKpC,UAAY4E,IAAYU,YAAenC,IAEnD,kBAAC,EAAD,CAAMd,YACFZ,EAAIjC,KAAI,SAACC,EAAMC,GAAP,OACN,uBAAGC,IAAMD,GAAUD,cAlFrB,EA4FpB8F,oBAAsB,SAACpG,EAAOwE,GAAR,OACpB,6BAEI,EAAKjC,aAAavC,EAChB,kBAAC,IAAD,CAAUqG,SAAS,OAAO9G,KAAK,OAAO+G,OAAO,SAEzC9B,EAAQnE,KAAI,SAACC,EAAMC,GAAP,OACV,kBAAC,IAASV,KAAV,CAAeW,IAAKD,GAClB,yBAAKW,IAAI,2BAAOD,IAAKX,EAAMgG,OAAO,iBAlGhD,EAAKC,WAAWzE,GAFE,E,wEA6GRA,GAAQ,IChIK0E,EDiIfC,EAAwC3E,EAAxC2E,SAA6BC,EAAW5E,EAA9B6E,MAASC,OAAUF,GACrCD,GClIuBD,EDkIFE,ECjIvBG,QAAQC,IAAIN,GACZK,QAAQC,IAAI1H,EAAOoH,IAEZ,CACLjH,KZRyB,gBYSzBC,QAAS,CACPN,QAAS,CACPE,OAAQA,EAAOoH,U,gDD6HMO,GACrBA,EAAUC,SAASC,WAAa1F,KAAKO,MAAMkF,SAASC,UACtD1F,KAAKgF,WAAWQ,K,+BAIT,IACU3H,EAAamC,KAAKO,MAA7B5C,QAAWE,OAEnB,IAAKA,EAAQ,OAAO,8BAEpB,IAAMyE,EAAOzE,EAAOyE,KACdqD,EAAQ9H,EAAO6E,aACfC,EAAO9E,EAAO8E,KACdE,EAAahF,EAAOgF,WAEpBG,EAAenF,EAAOmF,aAE5B,OACE,yBAAK1D,UAAY4E,IAAYrG,QACzBmC,KAAK+B,kBAAkBO,EAAKC,WAAYD,EAAK7D,MAAO6D,EAAKE,SAAUF,EAAKG,MAAOH,EAAKvB,KACpFf,KAAKsE,mBAAmBqB,EAAMlH,MAAOkH,EAAMhI,SAC3CqC,KAAKuE,YAAY5B,EAAKlE,MAAOkE,EAAKC,aAClC5C,KAAK0E,cAAc7B,EAAWpE,MAAOoE,EAAWhC,YAEhDb,KAAK6E,oBAAoB7B,EAAavE,MAAOuE,EAAaC,c,GA5I/ChD,IAAMC,a,oBETnB3B,EAA4BqH,IAA5BrH,OAAQsH,GAAoBD,IAApBC,QAAS1F,GAAWyF,IAAXzF,OAyBV2F,G,iLArBX,OACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQzG,UAAW0G,IAAUC,cAC3B,kBAAC,EAAD,OAEF,kBAACJ,GAAD,CAASvG,UAAW0G,IAAUE,eAC5B,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW1F,IACjC,kBAAC,IAAD,CAAOwF,KAAK,cAAcC,OAAK,EAACC,UAAW1C,KAE7C,kBAAC,GAAD,KACE,kBAAC,EAAD,c,GAdIzD,aCFEoG,QACW,cAA7BC,OAAOd,SAASe,UAEe,UAA7BD,OAAOd,SAASe,UAEhBD,OAAOd,SAASe,SAASpB,MACvB,2D,cCVNqB,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBEpInB1J,EAAOC,QAAU,CAAC,UAAY,wBAAwB,eAAe,2BAA2B,QAAU,sBAAsB,QAAU,sBAAsB,WAAa,yBAAyB,UAAY,0B,mBCAlND,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,2BAA2B,UAAY,0BAA0B,UAAY,0BAA0B,YAAc,4BAA4B,kBAAoB,kCAAkC,WAAa,6B,mBCAnRD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,IAAM,uB","file":"static/js/main.2bd43c7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerLayout\":\"App_headerLayout__J4155\",\"contentLayout\":\"App_contentLayout__1RnsV\"};","import { CHANGE_COURSE } from '../actionTypes'\n\nconst initialState = {\n  content: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_COURSE: {\n      const { content } = action.payload;\n      return {\n        ...state,\n        content\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport course from \"./course\";\n\nexport default combineReducers({ course });\n","export const CHANGE_COURSE = 'CHANGE_COURSE'\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport headerStyle from './header.module.sass'\n\nimport { Menu, Icon } from 'antd';\n\nconst { SubMenu, Item } = Menu;\n\nclass Header extends React.Component{\n  _menuList = [{\n    title: '首页',\n    href: '/',\n    subList: []\n  }, {\n    title: '核心课程',\n    href: '',\n    subList: [\n      {\n        title: 'CS301A 算法基础快速入门(Java/Cpp)',\n        href: '/course/CS301A',\n        subList: []\n      }, {\n        title: 'CS301B 题型技巧与算法讲解(Java/Cpp)',\n        href: '/course/CS301B',\n        subList: []\n      }, {\n        title: 'CS403A LeetCode1-300高频题详解(Java/Cpp/Python)',\n        href: '/course/CS403A',\n        subList: []\n      }, {\n        title: 'CS403B LeetCode301-600高频题详解(Java/Cpp)',\n        href: '/course/CS403B',\n        subList: []\n      }\n    ]\n  }, {\n    title: '专题课程',\n    href: '',\n    subList: [\n      {\n        title: 'CS202 二分搜索/字符串/链表(Java/Cpp)',\n        href: '/course/CS202',\n        subList: []\n      }, {\n        title: 'CS203 队列/优先队列/栈/树(Java/Cpp)',\n        href: '/course/CS203',\n        subList: []\n      }, {\n        title: 'CS204 BFS/DFS/HashTable(Java/Cpp)',\n        href: '/course/CS204',\n        subList: []\n      }, {\n        title: 'CS205 动态规划(Java)',\n        href: '/course/CS205',\n        subList: []\n      }\n    ]\n  }, {\n    title: '简历修改',\n    href: '',\n    subList: [\n      {\n        title: 'CS105 简历修改与指导',\n        href: '/course/CS105',\n        subList: []\n      }\n    ]\n  }, {\n    title: '直播课',\n    href: '',\n    subList: [\n      {\n        title: 'CS501 刷题&算法直播课',\n        href: '/course/CS501',\n        subList: []\n      }\n    ]\n  }]\n\n  _renderMenu = arrList => \n    arrList.map((item, index) => \n      <Item key={index}>\n        <Link to={item.href}>{item.title}</Link>\n      </Item>)\n\n  _renderNav = () => (\n    this._menuList.map((item, index) => {\n      if (item.subList.length === 0) {\n        return (\n          <Item key={index}>\n            <Link to={item.href}>{ item.title }</Link>\n          </Item>\n        )\n      } else {\n        return (\n          <SubMenu\n            key={index}\n            title={\n              <span slot=\"title\" className=\"submenu-title-wrapper\">\n                { item.title }\n                <Icon type=\"down\" />\n              </span>\n            }\n          >\n            { this._renderMenu(item.subList) }\n          </SubMenu>\n        )\n      }\n    })\n  )\n\n  render () {\n    return (\n      <div className={headerStyle.header}>\n        <Link to=\"/\">\n          <img\n            className={headerStyle.logo}\n            src=\"./logo.png\"\n            alt=\"logo\"\n          />\n        </Link>\n        <Menu mode=\"horizontal\" className={headerStyle.nav} selectable={false} subMenuCloseDelay={0.05}>\n          { this._renderNav() }\n        </Menu>\n      </div>\n    )\n  }\n}\n\nexport default Header;\n","import React from 'react'\n\nimport { Row, Col } from 'antd'\n\nimport './footer.sass'\n\nclass Footer extends React.Component{\n  render () {\n    return (\n      <div className=\"footer\">\n        <Row type=\"flex\" gutter={40}>\n          <Col span={5}>\n            <img alt=\"icon\" src=\"./logo.png\"/>\n          </Col>\n          <Col span={5}>\n            <p className=\"header\">FLAGEEK</p>\n            <p>\n              <a href=\"https://www.youtube.com/channel/UCidT0RBE2KmpNXvohmjoewQ\">Youtube 链接</a>\n            </p>\n          </Col>\n          <Col span={3}>\n            <p className=\"header\">小助手二维码</p>\n            <p>\n              <img alt=\"QRCode\" src=\"./home/code.png\"/>\n            </p>\n          </Col>\n          <Col span={3}>\n            <p className=\"header\">公众号二维码</p>\n            <p>\n              <img alt=\"QRCode\" src=\"./home/home_code.jpg\"/>\n            </p>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default Footer;\n","import React from 'react'\nimport './title.sass'\n\nclass Title extends React.Component{\n  render () {\n    return (\n      <div className=\"title-wrap\">\n        <h2>{ this.props.text }</h2>\n        <div className=\"dash\"></div>\n      </div>\n    )\n  }\n}\n\nexport default Title;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Title from '../components/title'\n\nimport { Card, Col, Row } from 'antd';\n\nimport homeStyle from './home.module.scss'\n\nconst { Meta } = Card;\n\nclass Home extends React.Component{\n  _blockList = [{\n    title: '核心课程',\n    courseList: [{\n      img: './home/CS301A.jpg',\n      href: '/course/CS301A',\n      title: 'CS301A 算法基础快速入门(Java/Cpp)',\n      des: 'CS301A是为刷题量较少的小白，或者刚刚决定转码，但对接下来要走的路还是一片迷茫的同学准备的。在CS301A中，我们不过分关注造轮子、推公式的过程，不过分关注冗杂的理论分析和数学推导，我们只关注“面试考什么”和“面试官想看到什么”。'\n    }, {\n      img: './home/CS301B.jpg',\n      href: '/course/CS301B',\n      title: 'CS301B 题型技巧与算法讲解(Java/Cpp)',\n      des: 'CS301B为有一定刷题基础的人量身定制，它囊括了面试最高频的题型与理论，也挑选了LeetCode里面的一些经典题型。它旨在用最低的时间成本，去最大化吸收每一个面试必备的知识点，去从源头上告别盲目背题的行为'\n    }, {\n      img: './home/CS403A.jpg',\n      href: '/course/CS403A',\n      title: 'CS403A LeetCode1-300高频题详解(Java/Cpp/Python)',\n      des: '尽管LeetCode题解已经随处可见，但你是否想过，随手搜来的解答是否一定正确，是否一定复杂度最低，你又是否能在第一时间理解并彻底掌握呢？CS403A存在的意义，就是帮你从浩如烟海、良莠不齐的信息里解脱，直接给你最优的解法、最清晰的思路和最一针见血的分析。'\n    }, {\n      img: './home/CS403B.jpg',\n      href: '/course/CS403B',\n      title: 'CS403B LeetCode301-600高频题详解(Java/Cpp)',\n      des: '相对于CS403A而言，CS403B课程的题目难度有所提升，每道题讲解时间也有所增加。如果你已经对LeetCode大部分题型都有一定的了解，那么除了CS301系列算法课程以外，这门课程同样能让你在刷题找工路上“百尺竿头，更进一步”。'\n    }]\n  }, {\n    title: '专题课程',\n    courseList: [{\n      img: './home/CS202.jpg',\n      href: '/course/CS202',\n      title: 'CS202 二分搜索/字符串/链表(Java/Cpp)',\n      des: 'CS202专题将讲解二分搜索在面试中的基本考点、字符串六大类问题总结以及双指针的性质、链表的六大基本操作。'\n    }, {\n      img: './home/CS203.jpg',\n      href: '/course/CS203',\n      title: 'CS203 队列/优先队列/栈/树(Java/Cpp)',\n      des: 'CS203专题将讲解队列与Design类问题的结合和队列实现问题、最常考的Top k问题以及堆的所有基本性质、归纳树的六大类问题及其做题技巧'\n    }, {\n      img: './home/CS204.jpg',\n      href: '/course/CS204',\n      title: 'CS204 BFS/DFS/HashTable(Java/Cpp)',\n      des: 'CS204专题将归纳BFS两大类面试常考问题以及BFS的进阶问题迪杰斯特拉算法的讲解、归纳DFS四大类面试常考问题及其做题技巧、哈希表的设计原理和冲突解决方案以及哈希表的实现问题'\n    }, {\n      img: './home/CS205.jpg',\n      href: '/course/CS205',\n      title: 'CS205 动态规划(Java)',\n      des: 'CS205专题将讲解动态规划各类型题目，并针对不同类型题目进行有针对性的方法总结。'\n    }]\n  }, {\n    title: '简历修改',\n    courseList: [{\n      img: './home/CS105.jpg',\n      href: '/course/CS105',\n      title: 'CS105 简历修改与指导',\n      des: '简历修改与指导'\n    }]\n  }, {\n    title: '直播课',\n    courseList: [{\n      img: './home/CS501.jpg',\n      href: '/course/CS501',\n      title: 'CS501 刷题&算法直播课',\n      des: '刷题&算法直播课'\n    }]\n  }]\n\n  _renderBlock = () => \n    this._blockList.map((item, index) => \n      <div className={homeStyle.blockWrap} key={index}>\n        <Title text={item.title} />\n        { this._renderCard(item.courseList) }\n      </div>\n    )\n\n  _render\n\n  _renderCard = arrayList => {\n    const gutter = 64;\n\n    const offset = arrayList.length === 1 ? 8 : 4;\n\n    return (\n      <Row gutter={gutter}>\n        {\n          arrayList.map((item, index) => \n            <Link to={item.href}  key={index}>\n              <Col span={8} offset={index % 2 === 0 ? offset : 0} style={{marginTop: gutter}}>\n                <Card\n                  hoverable\n                  cover={<img alt=\"course\" src={item.img} />}\n                >\n                  <Meta title={item.title} description={item.des} />\n                </Card>\n              </Col>\n            </Link>\n          )\n        }\n      </Row>\n    )\n  }\n\n  _renderCode = () => \n    <div className={homeStyle.fixWrap}>\n      <Card\n        hoverable\n        cover={\n          <div>\n            <img src=\"./home/fixTitle.png\" alt=\"title\" />\n          </div>\n        }\n      >\n        <div>\n          <div>\n            <img src=\"./home/code.png\" alt=\"code\" />\n          </div>\n          <div className={homeStyle.fixBody}>\n            请添加小助手咨询并购买课程\n          </div>\n        </div>\n        {/* <Meta description=\"请添加小助手咨询并购买课程\" /> */}\n      </Card>\n    </div>\n  \n  _renderTitleBlock = () => \n    <div className={ homeStyle.titleBlock } style={ { backgroundImage: `url(${ process.env.PUBLIC_URL}/course/course-title.jpg)` } }>\n      <div className={ homeStyle.titleWrap }>\n        <h2>价格最低，让每位互联网求职者不再孤单</h2>\n        <h2>全网好评率最高的北美找工求职课程</h2>\n        <h2>课程均已录制完成，可多次反复观看</h2>\n      </div>\n    </div>\n\n\n  render () {\n    return (\n      <div className={ homeStyle.home }>\n        { this._renderTitleBlock() }\n        { this._renderBlock() }\n        { this._renderCode() }\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import CS301A from './CS301A';\nimport CS301B from './CS301B'\n\nexport default {\n  CS301A,\n  CS301B\n}\n","export default {\n  base: {\n    background: '/course/course-title.jpg',\n    title: '算法基础快速入门(Java/Cpp)',\n    subTitle: 'CS301A是为刷题量较少的小白，或者刚刚决定转码，但对接下来要走的路还是一片迷茫的同学准备的。在CS301A中，我们不过分关注造轮子、推公式的过程，不过分关注冗杂的理论分析和数学推导，我们只关注“面试考什么”和“面试官想看到什么”。',\n    price: '$99',\n    des: ['有效期三个月',\n      '课程为录播，可多次重复观看',\n      '请添加小助手购买'\n    ]\n  },\n  introduction: {\n    title: '课程介绍',\n    content: [\n      '如果你是毫无写码经验的小白，或者刚刚决定转码，但对接下来要走的路还是一片迷茫，那么算法基础班是你最好的选择。也许很多人会选择学校的算法入门课作为自己转码的第一步，但这并不意味着你真正离offer又近了一步。我们尊重科班的严谨、全面，但是在有限的时间面前，我们更要功利一些。对于学校的算法课程，以学期为单位的进度会让你错过秋招/春招的黄金时期，对于我们的算法基础班，只要集中精力，你可以在不到一个月的时间内完成它。',\n      '我们不过分关注造轮子、推公式的过程，不过分关注冗杂的理论分析和数学推导，我们只关注“面试考什么”和“面试官想看到什么”。在一段相当长的时间内，我们非常建议走科班的教学模式，从一砖一瓦开始补起，但如果摆在你面前是迫在眉睫的秋招/春招，那么这个算法基础班或许是你最好的选择。',\n      '本课程中除了带领大家走入算法外，还将为大家带来针对该算法所对应的经典面试题，当你掌握了这些经典题目时，你会发现你已经真正的走出了从0到1的一大步。'\n    ]\n  },\n  suit: {\n    title: '适合人群',\n    studentList: [{\n      img: './course/student-icon-1.svg',\n      title: '零基础选手/转专业选手'\n    }, {\n      img: './course/student-icon-2.svg',\n      title: '想转码但不知从哪开始的同学'\n    }, {\n      img: './course/student-icon-3.svg',\n      title: '刷了一遍，但是重做还是忘的同学'\n    }, {\n      img: './course/student-icon-4.svg',\n      title: '几乎没有写码经验的同学'\n    }, {\n      img: './course/student-icon-5.svg',\n      title: '需要系统、全面学习'\n    }, {\n      img: './course/student-icon-6.svg',\n      title: '从来没有刷过题，或者刷题数量不够多的同学'\n    }, {\n      img: './course/student-icon-7.svg',\n      title: '只盲目刷题，忽视算法和数据结构基础的同学'\n    }]\n  },\n  courseInfo: {\n    title: '课程大纲',\n    courseList: [{\n      title: '第一章',\n      detail: {\n        title: 'Java基础福利章',\n        content: '对Java语言进行入门了解，为后面章节的课程打下基础'\n      },\n      contentList: [\n        'Java基础入门讲解'\n      ]\n    }, {\n      title: '第二章',\n      detail: {\n        title: '数组',\n        content: '深入了解一维、二维数组、异常处理并学习工业界以及面试中必备的编程好习惯，手把手讲解两道经典常考例题'\n      },\n      contentList: [\n        '什么是数组',\n        '二维数组',\n        '二维数组的遍历',\n        '异常处理及其意义',\n        '工业界编程中的好习惯，每道LeetCode都会用到的Check corner case',\n        '手把手写Code——两道面试中常考题'\n      ]\n    }, {\n      title: '第三章',\n      detail: {\n        title: '链表',\n        content: '掌握如何建立链表、链表的五大基本操作以及时间复杂度分析，手把手讲解四道经典常考例题'\n      },\n      contentList: [\n        '什么是链表',\n        '如何建立链表',\n        '链表中两件特别重要的事情',\n        '链表的五大操作',\n        '链表操作的时间复杂度',\n        '链表的神奇节点：dummy',\n        '手把手写code——四道面试中常考题',\n        '数组与链表的对比'\n      ]\n    }, {\n      title: '第四章',\n      detail: {\n        title: '队列',\n        content: '学习两组队列的基本操作API和双向队列的基本操作，手把手讲解四道经典常考例题'\n      },\n      contentList: [\n        '什么是队列Queue',\n        '手把手写code - 一道面试中常考题',\n        '队列的基本操作API',\n        '易被忽略的另一组API',\n        'Using array to implement queue 用数组实现一个队列',\n        '手把手写code - 一道面试中常考题',\n        'Deque双向队列',\n        'Deque的基本操作',\n        '手把手写code ——一道面试中常考题'\n      ]\n    }, {\n      title: '第五章',\n      detail: {\n        title: '栈',\n        content: '了解什么是栈以及栈的基本操作，手把手讲解五道经典常考例题'\n      },\n      contentList: [\n        '什么是栈？',\n        '栈的基本操作',\n        '手把手写code——五道面试中常考题'\n      ]\n    }, {\n      title: '第六章',\n      detail: {\n        title: '树',\n        content: '深入学习二叉树的前、中、后、层序遍历以及BST的经典内容，手把手讲解十道经典常考例题'\n      },\n      contentList: [\n        '什么是树Tree？',\n        '什么是二叉树(Binary Tree)',\n        '二叉树的前序遍历(preorder)',\n        '手把手写code——一道面试中常考题',\n        '二叉树的中序遍历（Inorder）',\n        '手把手写code——一道面试中常考题',\n        '二叉树的后序遍历（Postorder）',\n        '手把手写code——一道面试中常考题',\n        '二叉树的层序遍历（Level order）',\n        '手把手写code——两道面试中常考题',\n        '二分搜索树',\n        '手把手写code——四道面试中常考题'\n      ]\n    }, {\n      title: '第七章',\n      detail: {\n        title: '递归',\n        content: '讲解递归与数学的结合、递归与数组的结合、递归和链表的结合以及递归和树的结合，手把手讲解五道经典常考例题'\n      },\n      contentList: [\n        '什么是递归',\n        '手把手写code——五道面试中常考题'\n      ]\n    }, {\n      title: '第八章',\n      detail: {\n        title: '经典排序算法',\n        content: '选择排序、插入排序、归并排序、快速排序'\n      },\n      contentList: [\n        '四大经典排序算法大总结'\n      ]\n    }]\n  },\n  // price: {\n  //   title: '价格',\n  //   price: '$99',\n  //   des: ['有效期三个月',\n  //     '课程为录播，可多次重复观看',\n  //     '请添加小助手购买'\n  //   ]\n  // },\n  courseScreen: {\n    title: '课程截图',\n    imgList: [\n      './CS301A/1.png',\n      './CS301A/2.png',\n      './CS301A/3.png',\n      './CS301A/4.png',\n      './CS301A/5.png',\n      './CS301A/6.png',\n      './CS301A/7.png'\n    ]\n  }\n}\n","export default {\n  base: {\n    background: '/course/course-title.jpg',\n    title: '题型技巧与算法讲解(Java/Cpp)',\n    subTitle: 'CS301B',\n    price: '$99',\n    des: ['有效期三个月',\n      '课程为录播，可多次重复观看',\n      '请添加小助手购买'\n    ]\n  },\n  introduction: {\n    title: '课程介绍',\n    content: [\n      '如果说刷题是一个低头赶路的过程，那么算法就是一个抬头看路的过程。如果你明明刷了很多题，但是还是没有办法在遇到新题的时候，快速独立的完成；又或者，明明已经在面试里写出了解法，但是却挂在了follow up上；把那么你应该暂时停止刷题的步伐，或者说，暂时停止“背题”的行为，要花更多的时间去尝试梳理算法和数据结构，尝试找到自己的问题，做到举一反三。',\n      '而CS301B存在的意义，就是给处在这种状态的你提供一个捷径和桥梁。它为有一定刷题基础的人量身定制，它囊括了面试最高频的题型、理论，也挑选了LeetCode里面的一些经典题型，它旨在占用最低的时间成本，去深入每一个面试必备的细节。',\n      'CS301B对算法的总结更加透彻和细致，并通过近50道面试中常考题（多数题目与CS403不冲突，部分题目来自300题以后的经典题目），所以题目均于所讲算法相呼应。CS301B旨在让大家学以致用，培养算法和题目相结合的能力，而不是单纯背算法背题目。',\n      '学完本课程你可以告别盲目背题的行为，王牌讲师为大家带来算法最为细致的总结。并对每一类题进行深刻的剖析，你会慢慢发现，很多题目实际上都是出自于该题目的小小变种。同时在面试的过程中，当你拿到一个题时，尽管你没有接触过，但是根据我们总结的经验和方法，你同样可以很快的输入并讲给面试官听。'\n    ]\n  },\n  suit: {\n    title: '适合人群',\n    studentList: [{\n      img: './course/student-icon-1.svg',\n      title: '修过CS301A的同学'\n    }, {\n      img: './course/student-icon-2.svg',\n      title: '刷题遇到瓶颈的同学'\n    }, {\n      img: './course/student-icon-3.svg',\n      title: '刷了一遍，但是重做还是忘的同学'\n    }, {\n      img: './course/student-icon-4.svg',\n      title: '面试的时候明明把题目解出来了，但是却屡屡挂掉面试的同学'\n    }, {\n      img: './course/student-icon-5.svg',\n      title: '面试屡屡挂在follow up的同学'\n    }, {\n      img: './course/student-icon-6.svg',\n      title: '醉心钻研难题、偏题，却忽视了基本功的同学'\n    }, {\n      img: './course/student-icon-7.svg',\n      title: '希望系统复习并攻克算法重难点的同学'\n    }]\n  },\n  courseInfo: {\n    title: '课程大纲',\n    courseList: [{\n      title: '第一章',\n      detail: {\n        title: '二分搜索',\n        content: '打通二分搜索的基本考点，深入掌握面试中最常考的二分搜索while循环条件变化解决方案，并将二分搜索的思想从一维数组迁移到二维数组中，手把手写六道经典考题。'\n      },\n      contentList: [\n        '什么是Binary Search',\n        '手把手写code- 两道面试中的经典例题',\n        '二维数组的坐标和一维数组的索引值之间的转换',\n        '手把手写code——一道面试中的经典例题',\n        '靠背题永远发现不了的Binary Search 的条件变化',\n        '手把手写code——三道面试中的经典例题'\n      ]\n    }, {\n      title: '第二章',\n      detail: {\n        title: '字符串',\n        content: '系统总结字符串的六大类问题以及双指针相向、同向而行的性质、原理和应用场景进而升华到工业界中字符串的加密与解密的应用，手把手写十道经典考题。'\n      },\n      contentList: [\n        '字符串中第一类问题总结',\n        '字符串中第二类问题总结',\n        '手把手写code- 两道面试中的经典例题',\n        '双指针总结',\n        '字符串中第三类问题总结',\n        '手把手写code- 两道面试中的经典例题',\n        '字符串中第四类问题总结'\n      ]\n    }, {\n      title: '第三章',\n      detail: {\n        title: '链表',\n        content: '链表六大基本操作总结，帮助每一位学生熟练掌握链表的所有考点，手把手写六道经典考题'\n      },\n      contentList: [\n        '链表的经典技巧1',\n        '手把手写code- 一道面试中的经典例题',\n        '链表的经典技巧2',\n        '手把手写code- 一道面试中的经典例题',\n        '链表的经典技巧3',\n        '手把手写code- 一道面试中的经典例题',\n        '链表的经典技巧4',\n        '手把手写code- 一道面试中的经典例题',\n        '链表的经典技巧5',\n        '手把手写code- 一道面试中的经典例题',\n        '链表的经典技巧6',\n        '手把手写code- 一道面试中的经典例题'\n      ]\n    }, {\n      title: '第四章',\n      detail: {\n        title: 'BFS',\n        content: '归纳BFS两大类面试常考问题以及BFS的进阶问题迪杰斯特拉算法的讲解和面试场景应用。手把手写五道经典考题'\n      },\n      contentList: [\n        'BFS第一类问题',\n        '手把手写code- 三道面试中的经典例题',\n        'BFS第二类问题',\n        '手把手写code- 一道面试中的经典例题'\n      ]\n    }, {\n      title: '第五章',\n      detail: {\n        title: 'DFS',\n        content: '归纳DFS四大类面试常考问题及其做题技巧，真正做到看一道题解一类题。'\n      },\n      contentList: [\n        '什么是DFS？',\n        'DFS第一类问题',\n        '手把手写code- 三道面试中的经典例题',\n        'DFS第二类问题',\n        '手把手写code- 两道面试中的经典例题',\n        'DFS第三类问题',\n        '手把手写code- 两道面试中的经典例题',\n        'DFS第四类问题',\n        '手把手写code- 两道面试中的经典例题'\n      ]\n    }, {\n      title: '第六章',\n      detail: {\n        title: '队列',\n        content: '本章节深入讲解队列与Design类问题的结合以及队列实现的相关问题，手把手写六道面试常考例题'\n      },\n      contentList: [\n        '队列与Design类题目的结合问题',\n        '双向队列的问题',\n        '手把手写code- 五道面试中的经典例题'\n      ]\n    }, {\n      title: '第七章',\n      detail: {\n        title: '优先队列和栈',\n        content: '本章讲解面试中最常考的Top k问题以及堆的所有基本性质并手把手讲解七道面试常考例题。'\n      },\n      contentList: [\n        '神秘的PriorityQueue',\n        '最常考的Top k问题总结',\n        '手把手写code- 三道面试中的经典例题'\n      ]\n    }, {\n      title: '第八章',\n      detail: {\n        title: 'HashMap',\n        content: '哈希表的设计原理和冲突解决方案以及哈希表的实现问题，手把手讲解五道面试常考例题。'\n      },\n      contentList: [\n        '手把手写code- 四道面试中的经典例题'\n      ]\n    }, {\n      title: '第九章',\n      detail: {\n        title: '树',\n        content: '归纳树的六大类问题及其做题技巧，真正做到看一道题解一类题，手把手讲解八道面试常考例题。'\n      },\n      contentList: [\n        '树的第一类问题',\n        '手把手写code- 两道面试中的经典例题',\n        '树的第二类问题',\n        '手把手写code- 两道面试中的经典例题',\n        '树的第三类问题',\n        '手把手写code- 两道面试中的经典例题',\n        '树的第四类问题',\n        '手把手写code- 两道面试中的经典例题',\n        '树的第五类问题',\n        '手把手写code- 两道面试中的经典例题'\n      ]\n    }]\n  },\n  courseScreen: {\n    title: '课程截图',\n    imgList: [\n      './CS301B/1.png',\n      './CS301B/2.png',\n      './CS301B/3.png',\n      './CS301B/4.png',\n      './CS301B/5.png',\n      './CS301B/6.png',\n      './CS301B/7.png',\n      './CS301B/8.png',\n      './CS301B/9.png',\n      './CS301B/10.png',\n      './CS301B/11.png',\n      './CS301B/12.png',\n      './CS301B/13.png'\n    ]\n  }\n}\n","import React from 'react';\nimport { List, Avatar } from 'antd';\n\nimport './avaList.sass'\n\nclass AvaList extends React.Component{\n  render () {\n    return (\n      <List\n        grid={ this.props.grid }\n        dataSource={this.props.data}\n        renderItem={item => (\n          <List.Item>\n            {/* <Card hoverable>\n              <Meta\n                avatar={<Avatar src={item.img}/>}\n                title={item.title}\n                description={item.des}\n              />\n            </Card> */}\n            <div className=\"itemWrap\">\n              <div className=\"imgWrap\">\n                <Avatar src={item.img} size={ 64 }/>\n              </div>\n              <p>{ item.title }</p>\n            </div>\n            {/* <List.Item.Meta\n              avatar={<Avatar src={item.img}/>}\n              title={item.title}\n              description={item.des}\n            /> */}\n          </List.Item>\n        )}\n      />\n    )\n  }\n}\n\nexport default AvaList;\n","import React from 'react';\nimport { Collapse, Timeline, Icon } from 'antd';\n\nimport './courseBlock.sass';\n\nconst { Panel } = Collapse;\n\nclass Course extends React.Component{\n  state = {\n    show: false\n  }\n\n  onChange = (val) => {\n    this.setState({\n      show: val.length !== 0\n    })\n  }\n\n  render () {\n    const { title, detail, contentList } = this.props\n\n    return (\n      <div className=\"course\">\n        <Collapse onChange={this.onChange}>\n          <Panel showArrow={false} header={\n            <div className=\"course-pannel\">\n                <div className=\"course-pannel-title\">\n                  { title }\n                </div>\n                <div className=\"course-detail-wrap\">\n                  <h3 className=\"course-detail-title\">\n                    { detail.title }\n                  </h3>\n                  <div className=\"course-detail-content\">\n                    { detail.content }\n                  </div>\n                  <div className=\"course-icon-wrap\">\n                    <Icon type={ this.state.show ? \"up\" : \"down\"} />\n                  </div>\n                </div>\n            </div>\n          }>\n            <Timeline>\n              { contentList.map((item, index) => \n                <Timeline.Item key={index}>\n                  { item }\n                </Timeline.Item>)\n              }\n            </Timeline>\n          </Panel>\n        </Collapse>\n      </div>\n    )\n  }\n}\n\nexport default Course;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeCouse } from '../store/actions';\n\nimport Title from '../components/title';\nimport AvaList from '../components/avaList';\nimport CourseBlock from '../components/courseBlock';\n\nimport courseStyle from './course.module.scss'\n\nimport { Card, Col, Row } from 'antd';\n\nimport { Carousel } from 'element-react/next';\n\nimport 'element-theme-default';\n\nconst { Meta } = Card;\n\n@connect(\n  state => ({...state.course})\n)\nclass Course extends React.Component{\n  constructor (props) {\n    super();\n    this.getContent(props);\n  }\n\n  _renderTitleBlock = (background, title, subTitle, price, des) => \n    <div className={ courseStyle.titleBlock } style={ { backgroundImage: `url(${ process.env.PUBLIC_URL + background})` } }>\n      <div className={ courseStyle.titleWrap }>\n      <Row gutter={100}>\n        <Col span={16}>\n          <h1>{ title }</h1>\n          <h3>{ subTitle }</h3>\n        </Col>\n        <Col span={8}>\n          <h1>{ price }</h1>\n          {\n            des.map((item, index) => \n              <p key={ index }>{ item }</p>\n          )\n          }\n        </Col>\n      </Row>\n        {/* <h1>{ title }</h1>\n        <h2>{ subTitle }</h2> */}\n      </div>\n    </div>\n\n  _renderTextContent = (contentList) =>\n    <div className={ courseStyle.courseTextContent }>\n      { contentList.map((item, index) => <p key={index}>{ item }</p>) }\n    </div>\n\n  _renderBlock = (title, content) => \n    <div className={ courseStyle.courseBlock }>\n      <Title text={ title } />\n      { content }\n    </div>\n\n  _renderIntrodution = (title, content) => \n    <div>\n      { this._renderBlock(title,\n          this._renderTextContent(content)\n      ) }\n    </div>\n\n  _renderSuit = (title, stuList) => \n    <div>\n      {\n        this._renderBlock(title,\n          <AvaList data={ stuList } grid={ { gutter: 16, column: 4 } }/>\n        )\n      }\n    </div>\n\n  _renderCourse = (title, courseList) => \n      <div>\n        {\n          this._renderBlock(title,\n            courseList.map((item, index) => \n              <CourseBlock\n              title={ item.title }\n              detail={ item.detail } \n              contentList={ item.contentList } \n              key={ index }\n              />\n            )\n          )\n        }\n      </div>\n\n  _renderPrice = (title, price, des) => \n      <div>\n        {\n          this._renderBlock(title,\n            <Row gutter={16}>\n              <Col span={4} offset={10}>\n                <Card\n                  hoverable\n                  cover={<div className={ courseStyle.priceBlock }>{ price }</div>}\n                >\n                  <Meta description={\n                      des.map((item, index) => \n                        <p key={ index }>{ item }</p>\n                      )\n                    } />\n                </Card>\n              </Col>\n            </Row>\n          )\n        }\n      </div>\n\n  _renderCourseScreen = (title, imgList) =>\n    <div>\n      {\n        this._renderBlock(title,\n          <Carousel interval=\"4000\" type=\"card\" height=\"400px\">\n            {\n              imgList.map((item, index) => \n                <Carousel.Item key={index}>\n                  <img alt=\"课程截图\" src={item} height=\"100%\"/>\n                </Carousel.Item>\n              )\n            }\n          </Carousel>\n        )\n      }\n    </div>\n\n  getContent (props) {\n    const { dispatch, match: { params: { id } } } = props;\n    dispatch(changeCouse(id));\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.location.pathname !== this.props.location.pathname) {\n      this.getContent(nextProps);\n    }\n  }\n\n  render () {\n    const { content: { course } } = this.props;\n\n    if (!course) return <div></div>\n\n    const base = course.base;\n    const intro = course.introduction;\n    const suit = course.suit;\n    const courseInfo = course.courseInfo;\n    // const price = course.price;\n    const courseScreen = course.courseScreen;\n\n    return (\n      <div className={ courseStyle.course }>\n        { this._renderTitleBlock(base.background, base.title, base.subTitle, base.price, base.des) }\n        { this._renderIntrodution(intro.title, intro.content) }\n        { this._renderSuit(suit.title, suit.studentList) }\n        { this._renderCourse(courseInfo.title, courseInfo.courseList) }\n        {/* { this._renderPrice(price.title, price.price, price.des) } */}\n        { this._renderCourseScreen(courseScreen.title, courseScreen.imgList) }\n      </div>\n    )\n  }\n}\n\nexport default Course;\n","import { CHANGE_COURSE } from './actionTypes'\nimport course from './course'\n\nexport const changeCouse = courseName => {\n  console.log(courseName)\n  console.log(course[courseName])\n\n  return {\n    type: CHANGE_COURSE,\n    payload: {\n      content: {\n        course: course[courseName]\n      }\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { Layout } from 'antd';\nimport store from './store';\nimport HeaderComponent from './components/header';\nimport FooterComponent from './components/footer';\nimport Home from './pages/home';\nimport Course from './pages/course';\n\nimport AppStyles from './App.module.sass'\n\nconst { Header, Content, Footer } = Layout;\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter>\n          <Layout>\n            <Header className={AppStyles.headerLayout}>\n              <HeaderComponent />\n            </Header>\n            <Content className={AppStyles.contentLayout}>\n              <Route path='/' exact component={Home}></Route>\n              <Route path='/course/:id' exact component={Course}></Route>\n            </Content>\n            <Footer>\n              <FooterComponent />\n            </Footer>\n          </Layout>\n        </HashRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\nimport './index.sass'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockWrap\":\"home_blockWrap__3OQLy\",\"ant-row-flex\":\"home_ant-row-flex__2lOB_\",\"fixWrap\":\"home_fixWrap__2nkbe\",\"fixBody\":\"home_fixBody__3Aidy\",\"titleBlock\":\"home_titleBlock__paf27\",\"titleWrap\":\"home_titleWrap__sonCv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"course\":\"course_course__34wVD\",\"titleBlock\":\"course_titleBlock__1fLGK\",\"titleWrap\":\"course_titleWrap__2m4DC\",\"titleLeft\":\"course_titleLeft__19Qvz\",\"courseBlock\":\"course_courseBlock__OFD20\",\"courseTextContent\":\"course_courseTextContent__3pvpq\",\"priceBlock\":\"course_priceBlock__tOW6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1-BvO\",\"logo\":\"header_logo__2AFUq\",\"nav\":\"header_nav__2VUYr\"};"],"sourceRoot":""}